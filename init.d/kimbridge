#! /bin/sh
### BEGIN INIT INFO
# Provides:          kimbridge
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: KIMBridge initscript.
# Description:       This script uses jsvc to start and stop the KIMBridge service.
### END INIT INFO

# Author: Jan Smitka <jan.smitka@lynt.cz>

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="KIMBridge service"
NAME=kimbridge
SCRIPTNAME=/etc/init.d/$NAME

# The following variables must be verified before attempting to start the service.
KB_HOME="/home/kim/kimbridge"
JDK_HOME="/usr/lib/jvm/java-1.7.0-openjdk-amd64/"
JSVC=/usr/bin/jsvc
CONFIG="/home/kim/kimbridge/config.xml"

# KIMBridge paths and options, probably not worth modifying.
CLASSPATH="$KB_HOME/KIMBridge.jar:$KB_HOME/libs/commons-daemon-1.0.14.jar"
PIDFILE="$KB_HOME/$NAME.pid"
OUTFILE="$KB_HOME/$NAME.out"
ERRFILE="$KB_HOME/$NAME.err"
USER=kim
OPTS="-Djava.security.manager -Djava.security.policy=$KB_HOME/security.policy"
CLASS="cz.zcu.kiv.eeg.KIMBridge.KIMBridgeDaemon"
JSVC_BASE="$JSVC -home $JDK_HOME -cp $CLASSPATH -user $USER -pidfile $PIDFILE -outfile $OUTFILE -errfile $ERRFILE -procname $NAME $OPTS"

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	$JSVC_BASE $CLASS $CONFIG
}

#
# Function that stops the daemon/service
#
do_stop()
{
	$JSVC_BASE -stop $CLASS
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

:
